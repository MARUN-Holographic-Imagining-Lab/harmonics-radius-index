[project]
name = "harmonicsradius"
description = "Harmonics' Radius Index (HRI95) is a full-reference image quality index based harmonic structures of the images for the comparison super-resolution models."
keywords = ["super-resolution", "frequency-analysis", "image-quality-metrics"]
version = "2024.5.21"
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Other Audience",
    "Topic :: Scientific/Engineering :: Image Processing",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = ["numpy", "opencv-python", "scikit-image", "matplotlib"]


requires-python = ">= 3.10"
authors = [{ name = "Gökhan Koçmarlı", email = "gokhan.kocmarli@gmail.com" }]
maintainers = [
    { name = "Gökhan Koçmarlı", email = "gokhan.kocmarli@gmail.com" },
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["harmonicsradius*"]

[project.scripts]
hri95 = "hri95:main"

[project.urls]
Homepage = "https://github.com/electricalgorithm/harmonics-radius-index"
Repository = "https://github.com/electricalgorithm/harmonics-radius-index.git"
Issues = "https://github.com/electricalgorithm/harmonics-radius-index/issues"


[tool.flake8]
exclude = [".git", "__pycache__", "*venv", "build", "dist", "venv*", "examples"]
max-line-length = 100
count = true

[tool.pylint.main]
persistent = true
extension-pkg-whitelist = "cv2"
ignore = [".git", "__pycache__", "*venv", "build", "dist", "venv*"]
fail-under = '8.5'
ignore-patterns = ["^\\.#", "^examples/.*$"]
jobs = 5
limit-inference-results = 100
load-plugins = [
    "pylint.extensions.check_elif",
    "pylint.extensions.bad_builtin",
    "pylint.extensions.docparams",
    "pylint.extensions.for_any_all",
    "pylint.extensions.set_membership",
    "pylint.extensions.code_style",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.typing",
    "pylint.extensions.redefined_variable_type",
    "pylint.extensions.comparison_placement",
    "pylint.extensions.mccabe",
]
py-version = "3.10"
suggestion-mode = true

[tool.pylint.FORMAT]
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"

[tool.pylint."messages control"]
disable = [
    "too-few-public-methods",
    "arguments-differ",
    "import-error",
    "too-many-locals",
    "no-member",
]
